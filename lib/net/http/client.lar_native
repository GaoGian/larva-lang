package LARVA_NATIVE

import (
    "net/http"
    "time"
)

type lar_cls_@<<_Client>> struct {
    c *http.Client
}

func lar_new_obj_lar_cls_@<<_Client>>(timeout float64) *lar_cls_@<<_Client>> {
    return &lar_cls_@<<_Client>>{
        c: &http.Client{
            Timeout: time.Duration(timeout * 1e9),
        },
    }
}

func (this *lar_cls_@<<_Client>>) lar_method_do(req *lar_cls_@<<Request>>) *lar_cls_@<<Response>> {
    rsp, err := this.c.Do(req.m_req.req)
    lar_go_func_@<<throw_on_go_err>>(err)
    return &lar_cls_@<<Response>>{
        m_rsp: &lar_cls_@<<_Response>>{
            rsp: rsp,
        },
    }
}
