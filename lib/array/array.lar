import util;

public T[] copy<T>(T[] a)
{
    long sz = a.size();
    var b = new T[sz];
    for (long i = 0; i < sz; ++ i)
    {
        b[i] = a[i];
    }
    return b;
}

public T[] deep_copy<T>(T[] a)
{
    long sz = a.size();
    var b = new T[sz];
    for (long i = 0; i < sz; ++ i)
    {
#use
        b[i] = deep_copy(a[i]);
#oruse
        b[i] = a[i];
#enduse
    }
    return b;
}

public long index<E>(E[] a, E e)
{
    long sz = a.size();
    for (long i = 0; i < sz; ++ i)
    {
        if (util.eq<E>(a[i], e))
        {
            return i;
        }
    }
    return -1L;
}
