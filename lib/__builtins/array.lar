/*
数组在作为对象使用时的泛型等价代码，供参考：

public class Array<E>
{
    public Array(long size)
    {
        arr = new E[size];
        arr_size = size;
    }

    public long size()
    {
        return arr_size;
    }

    public E get(long idx)
    {
        return arr[idx];
    }

    public void set(long idx, E elem)
    {
        arr[idx] = elem;
    }

    E[] arr;
    long arr_size;
}

*/

//数组的迭代器
public class ArrayIter<E>
{
    public ArrayIter(E[] a, long i)
    {
        arr = a;
        idx = i;
    }

    public Iter<E> iter()
    {
        return this;
    }

    public Iter<E> copy()
    {
        return new ArrayIter<E>(arr, idx);
    }

    public bool before_begin()
    {
        return idx < 0;
    }

    public bool after_end()
    {
        return idx >= arr.size();
    }

    public E get()
    {
        return arr[idx];
    }

    public void set(E e)
    {
        arr[idx] = e;
    }

    public void inc()
    {
        if (before_begin())
        {
            idx = 0;
            return;
        }
        if (after_end())
        {
            throw(new ArrayIndexError());
        }
        ++ idx;
    }

    public void dec()
    {
        if (before_begin())
        {
            throw(new ArrayIndexError());
        }
        if (after_end())
        {
            idx = arr.size() - 1;
            return;
        }
        -- idx;
    }

    E[] arr;
    long idx;
}
