import reflect;

native long hash_float(float n);
native long hash_double(double n);

//通用的计算hash的方法，保证返回非负
public long hash<T>(T t)
{
    long h;

#use
    h = hash_double(t);
#oruse
    h = hash_float(t);
#oruse
    h = (long)t;
#oruse
    h = t.hash();
#enduse

    ulong uh = (ulong)h * 2862933555777941757UL;
    return (long)((uh >> 32) ^ uh) & 0x7FFFFFFFFFFFFFFFL;
}

public int cmp<T>(T a, T b)
{
#use
    return a.cmp(b);
#oruse
    if (a < b)
    {
        return -1;
    }
    if (a > b)
    {
        return 1;
    }
    return 0;
#enduse
}

public bool eq<T>(T a, T b)
{
#use
    return a.eq(b);
#oruse
    return a.cmp(b) == 0;
#oruse
    return a == b;
#enduse
}
